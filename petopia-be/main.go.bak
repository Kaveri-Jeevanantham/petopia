package main

import (
	"log"
	"petopia-be/config"
	"petopia-be/db"
	"petopia-be/seed"
	"petopia-be/server"

	_ "petopia-be/docs"

	"github.com/joho/godotenv"
)

// @title Petopia API
// @version 1.0
// @description This is a sample server for Petopia.
// @termsOfService http://swagger.io/terms/

// @contact.name API Support
// @contact.url http://www.swagger.io/support
// @contact.email support@swagger.io

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @host localhost:8080
// @BasePath /api

func main() {
	// Load environment variables from .env file
	if err := godotenv.Load(); err != nil {
		log.Fatalf("Error loading .env file: %v", err)
	}

	// Load configuration
	cfg := config.Load()

	// Initialize RabbitMQ
	/* 	if err := rabbitmq.InitRabbitMQ(); err != nil {
	   		log.Fatalf("Could not initialize RabbitMQ: %v", err)
	   	}
	   	defer rabbitmq.CloseConnection()

	   	if err := rabbitmq.DeclareTestQueue(); err != nil {
	   		log.Fatalf("Could not declare test queue: %v", err)
	   	}

	   	if err := rabbitmq.StartTestConsumer(); err != nil {
	   		log.Fatalf("Could not start test consumer: %v", err)
	   	}
	*/
	// Initialize PostgreSQL database
	database, err := db.Connect()
	if err != nil {
		log.Fatalf("Could not connect to PostgreSQL: %v", err)
	}

	// Initialize MongoDB with retry mechanism
	_, err = db.ConnectMongoDBWithRetry(3)
	if err != nil {
		log.Fatalf("Could not connect to MongoDB after retries: %v", err)
	}

	// Verify connection was successful
	if db.VerifyMongoConnection() {
		log.Println("MongoDB connection verified successfully")
	} else {
		log.Fatalf("MongoDB connection verification failed")
	}

	defer func() {
		if err := db.DisconnectMongoDB(); err != nil {
			log.Printf("Error disconnecting from MongoDB: %v", err)
		}
	}()

	// Seed the database
	if err := seed.SeedDatabase(database); err != nil {
		log.Fatalf("Error seeding PostgreSQL database: %v", err)
	}

	// Seed MongoDB
	if err := seed.SeedMongoDatabase(); err != nil {
		log.Fatalf("Error seeding MongoDB database: %v", err)
	}

	// Start server
	log.Fatal(server.StartV2(cfg, database))
}
